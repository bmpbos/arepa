import arepa
import os
import sys

Import( "pE" )

c_strID				= arepa.dir( pE )
c_strDir			= arepa.dir( pE, False )
c_strType			= c_strID[2:6]
c_strFileIDZIP		= c_strID + ".processed.1.zip"
c_strSConscriptDat	= "SConscript.dat"
c_strSConscriptDas	= "SConscript.das"
c_strProcessedData	= "-processed-data-"
c_strTXT			= ".txt"

arepa.download( pE, c_strFileIDZIP,
	"ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/" + c_strType +
		"/" + c_strID + "/" + c_strFileIDZIP )
pE.NoClean( c_strFileIDZIP )

def funcID( pE, strZIP ):
	arepa.ex( " ".join( ("unzip", "-f", "-d", c_strDir, strZIP) ) )
	afileProcs = Glob( "*" + c_strProcessedData + "*" )
	if afileProcs:
		for fileProc in afileProcs:
			strID = str(fileProc).replace( c_strProcessedData, "_" ).replace( c_strTXT, "" )
			pE.SConscript( c_strSConscriptDat, duplicate = 0 )
		return
	afileSamples = Glob( "*sample_table*" )
	if afileSamples:
		pE.SConscript( c_strSConscriptDas, duplicate = 0, exports = "afileSamples" )
def funcIDTMP( target, source, env ):
	strT, astrSs = arepa.ts( target, source )
	return funcID( env, astrSs[0] )
pE.Command( c_strID + ".tmp", c_strFileIDZIP, funcIDTMP )
if os.path.isfile( c_strFileIDZIP ):
	funcID( pE, c_strFileIDZIP )
