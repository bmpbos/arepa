import arepa
import os
import sys
import sfle
import csv

pE			= DefaultEnvironment( )
c_iMinimum		= 10
c_strURL		= "http://thebiogrid.org/downloads/archives/Release%20Archive/BIOGRID-3.1.83/BIOGRID-ALL-3.1.83.tab2.zip"

c_fileInputTaxIDs	= sfle.d( arepa.path_arepa( ), sfle.c_strDirTmp, "taxids" )
c_fileBioGridZIP	= sfle.d( pE, sfle.c_strDirTmp, os.path.basename(c_strURL))
c_fileBioGridTXT     	= sfle.d( pE, sfle.c_strDirTmp, "biogrid_downloaded.txt" )
c_fileBioGridC		= sfle.d( pE, sfle.c_strDirTmp, "biogridc.txt" )
c_fileProgBioGrid	= sfle.d( pE, arepa.path_repo( ), sfle.c_strDirSrc, "biogrid.py" ) 
c_fileProgBioGrid2C    	= sfle.d( pE, arepa.path_repo( ), sfle.c_strDirSrc, "biogrid2c.py" ) 
c_strTXT                = sfle.c_strSufTXT


#===============================================================================
# Download the Biogrid.zip source file
#===============================================================================
sfle.download( pE,c_strURL,c_fileBioGridZIP )

#===============================================================================
# Extract BIOGRID-ALL-3.1.83.tab2.txt from BIOGRID-ALL-3.1.83.tab2.zip
#===============================================================================

sfle.scmd( pE, "unzip", c_fileBioGridTXT, ["-p", [c_fileBioGridZIP]] )

#===============================================================================
# Reformat text file for easier text parsing
#===============================================================================

afileBioGridC = sfle.pipe( pE, c_fileBioGridTXT, c_fileProgBioGrid2C, c_fileBioGridC,  [c_iMinimum, [c_fileInputTaxIDs]] )

#===============================================================================
# Pass the IDs  to child directories
#===============================================================================

def funcScanner( target, source, env ):
    for strLine in open( str(source[0]) ):
        if strLine.startswith( ">" ):
            env["sconscript_child"]( target, source[0], env, strLine[1:].strip( ) )
sfle.sconscript_children( pE, afileBioGridC, funcScanner, 1, arepa.c_strProgSConstruct )

