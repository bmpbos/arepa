import arepa
import os
import sys
import sfle
import pickle

c_strURL		= "http://regulondb.ccg.unam.mx/data/network_tf_gene.txt"
c_strInputTaxIDs	= sfle.d( arepa.path_arepa( ), sfle.c_strDirTmp, "taxids" )
c_fileRegDBTXT       	= sfle.d( pE, sfle.c_strDirTmp, os.path.basename(c_URL))
c_fileProgRegDB  	= sfle.d( pE, arepa.path_repo( ), sfle.c_strDirSrc, "regulondb.py" ) 

c_fileInMeta		= sfle.d( pE, sfle.c_strDirEtc, "regulondb.txt" )

c_fileOutDAT            = sfle.d( pE, sfle.c_strDirData, "regulondb.dat" )
c_fileOutDAB            = sfle.d( pE, sfle.c_strDirData,  File( sfle.rebase(c_fileOutDAT, ".dat", ".dab" )))
c_fileOutQUANT          = sfle.d( pE, sfle.c_strDirData,  File( sfle.rebase(c_fileOutDAT, ".dat", ".quant" )))
c_fileOutPKL		= sfle.d( pE, sfle.c_strDirData, "regulondb.pkl" )


#For GeneMapper:
c_fileMapDAT            = sfle.d( pE, sfle.c_strDirData, "regulondb_mapped.dat" )
c_path_GeneMapper       = sfle.d( arepa.path_arepa(), "GeneMapper")
c_strMappingfileEcoli   = sfle.d( c_path_GeneMapper, sfle.c_strDirEtc, "uniprotko","511145_eco_colibri-eco.list.map")
c_strGeneFrom 		= "H"
c_astrGeneTo            = sfle.readcomment( sfle.d( arepa.path_arepa(),sfle.c_strDirEtc,"geneid" ) or ["H"] )
c_fileStatus		= sfle.d(pE, "data/status.txt")

pE = DefaultEnvironment( )

#===============================================================================
# Download the source text file
#===============================================================================
sfle.download( pE,c_URL,c_strFileRegDBTXT )

#extract stuff 
sfle.op( pE, c_strProgRegDB, [[c_strFileRegDBTXT], [True,c_fileOutDAT]] )

#execfile()
funcGeneIDMapping( c_fileMapDAT, c_strMappingfileEcoli, c_fileStatus )

def funcMeta( target, source, env ):
        strT, astrSs = sfle.ts( target, source )
        strS = astrSs[0]
        with open( strT,"wb" ) as outputf:
                pickle.dump({k:v for k,v in map( lambda k: k.split("\t"), sfle.readcomment( strS ) )},\
                        outputf )
Command( c_fileOutPKL, [c_fileInMeta], funcMeta )

