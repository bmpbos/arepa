import arepa
import os
import sys

c_iMinimum			= 10

#------------------------------------------------------------------------------ 

c_strInputTaxIDs	= arepa.d( arepa.path_arepa( ), arepa.c_strDirTmp, "taxids" )
c_strFileIntactZIP	= arepa.d( arepa.c_strDirTmp, "intact-clustered.zip" )
c_strFileIntactTXT	= arepa.d( arepa.c_strDirTmp, "intact.txt" )
c_strFileIntactC	= arepa.d( arepa.c_strDirTmp, "intactc" )
c_strProgIntact2C	= arepa.d( arepa.c_strDirSrc, "intact2c.py" )
c_strTXT			= ".txt"

pE = Environment( )

#===============================================================================
# Download the intact.zip source file
#===============================================================================

arepa.download( pE, "ftp://ftp.ebi.ac.uk/pub/databases/intact/current/psimitab/intact-clustered.zip",
	c_strFileIntactZIP )
NoClean( c_strFileIntactZIP )

#===============================================================================
# Extract intact.txt from intact.zip
#===============================================================================

def funcIntactTXT( target, source, env ):
	strT, astrSs = arepa.ts( target, source )
	return arepa.ex( " ".join( ("unzip", "-p", astrSs[0], os.path.basename( strT )) ), strT )
Command( c_strFileIntactTXT, c_strFileIntactZIP, funcIntactTXT )

#===============================================================================
# Process intact.txt into the more compact intactc
#===============================================================================

afileIntactC = arepa.pipe( pE, c_strFileIntactTXT, c_strProgIntact2C,
	c_strFileIntactC, [[False, c_iMinimum], [True, c_strInputTaxIDs]] )

#===============================================================================
# Pass the IDs from intactc to child directories
#===============================================================================

def funcScanner( target, source, env ):
	for strLine in open( str(source[0]) ):
		if strLine.startswith( ">" ):
			env["sconscript_child"]( target, source[0], env, strLine[1:].strip( ) )
arepa.sconscript_children( pE, afileIntactC, funcScanner, 1 )
