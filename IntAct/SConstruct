import arepa
import os
import sys

c_iMinimum			= 10

#------------------------------------------------------------------------------ 

pE = Environment( )
c_strInputTaxa		= arepa.path_arepa( ) + arepa.c_strFileTaxids
c_strFileIntactZIP	= arepa.c_strTmp + "intact.zip"
c_strFileIntactTXT	= arepa.c_strTmp + "intact.txt"
c_strFileIntactC	= arepa.c_strTmp + "intactc"
c_strProgIntact2C	= arepa.c_strSource + "intact2c.py"
c_strTXT			= ".txt"

pE.Dir( arepa.c_strTmp )

#===============================================================================
# Download the intact.zip source file
#===============================================================================

arepa.download( pE, c_strFileIntactZIP,
	"ftp://ftp.ebi.ac.uk/pub/databases/intact/current/psimitab/intact.zip" )
pE.NoClean( c_strFileIntactZIP )

#===============================================================================
# Extract intact.txt from intact.zip
#===============================================================================

def funcIntactTXT( target, source, env ):
	strT, astrSs = arepa.ts( target, source )
	strBase = os.path.basename( strT )
	strDir = "psimitab/"
	return arepa.ex( " ".join( ("unzip", "-p", astrSs[0], strDir + strBase) ), strT )
pE.Command( c_strFileIntactTXT, c_strFileIntactZIP, funcIntactTXT )

#===============================================================================
# Process intact.txt into the more compact intactc
#===============================================================================

arepa.pipe( pE, c_strFileIntactTXT, c_strProgIntact2C, c_strFileIntactC,
	[[False, c_iMinimum], [True, c_strInputTaxa]] )

#===============================================================================
# Pass the IDs from intactc to child directories
#===============================================================================

def funcIntactTMP( target, source, env ):
	strT, astrSs = arepa.ts( target, source )
	for strLine in open( astrSs[0] ):
		if strLine.startswith( ">" ):
			strDir = arepa.c_strData + strLine[1:].strip( )
			arepa.sconstruct( env, strDir )
pE.Command( "intact.tmp", c_strFileIntactC, funcIntactTMP )
