import arepa
import os
import re
import subprocess
import sys

c_iMinimum			= 10

#------------------------------------------------------------------------------ 

c_fileIntactZIP		= File( arepa.d( arepa.c_strDirTmp, "intact-clustered.zip" ) )
c_fileIntactTXT		= File( arepa.d( arepa.c_strDirTmp, "intact.txt" ) )
c_fileIntactC		= File( arepa.d( arepa.c_strDirTmp, "intactc" ) )
c_fileProgIntact2C	= File( arepa.d( arepa.c_strDirSrc, "intact2c.py" ) )
c_strTXT			= ".txt"

Import( "c_fileTaxIDs" )
Import( "pE" )
pE.Dir( arepa.c_strDirTmp )

#===============================================================================
# Download the intact.zip source file
#===============================================================================

arepa.download( pE, "ftp://ftp.ebi.ac.uk/pub/databases/intact/current/psimitab/intact-clustered.zip",
	c_fileIntactZIP )
pE.NoClean( c_fileIntactZIP )

#===============================================================================
# Extract intact.txt from intact.zip
#===============================================================================

def funcIntactTXT( target, source, env ):
	strT, astrSs = arepa.ts( target, source )
	return arepa.ex( " ".join( ("unzip", "-p", astrSs[0], os.path.basename( strT )) ), strT )
pE.Command( c_fileIntactTXT, c_fileIntactZIP, funcIntactTXT )

#===============================================================================
# Process intact.txt into the more compact intactc
#===============================================================================

afileIntactC = arepa.pipe( pE, c_fileIntactTXT, c_fileProgIntact2C, c_fileIntactC,
	[[False, c_iMinimum], [True, c_fileTaxIDs]] )

#===============================================================================
# Pass the IDs from intactc to child directories
#===============================================================================

def funcScanner( target, source, env ):
	for fileSource in source:
		for strLine in open( str(fileSource) ):
			if strLine.startswith( ">" ):
				env["sconscript_child"]( target, fileSource, env, strLine[1:].strip( ) )
arepa.sconscript_children( pE, afileIntactC, funcScanner, 1, globals( ) )
